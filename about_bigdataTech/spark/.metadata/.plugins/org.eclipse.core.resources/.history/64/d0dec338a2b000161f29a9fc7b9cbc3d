package sparkdemo;

import java.io.Serializable;
import java.util.List;
import java.util.regex.Pattern;

import org.apache.hadoop.fs.Stat;
import org.apache.hadoop.hive.ql.exec.spark.Statistic.SparkStatistic;

import com.google.common.collect.Lists;





/**
 * Executes a roll up-style query against Apache logs.
 *
 * Usage: JavaLogQuery [logFile]
 */
public final class JavaLogQuery {
	public static final List<String> exampleApacheLogs = Lists.newArrayList(	
			"10.10.10.10 - \"FRED\" [18/Jan/2013:17:56:07 +1100] \"GET http://images.com/2013/Generic.jpg " +
				      "HTTP/1.1\" 304 315 \"http://referall.com/\" \"Mozilla/4.0 (compatible; MSIE 7.0; " +
				      "Windows NT 5.1; GTB7.4; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; " +
				      ".NET CLR 3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 1.0.3705; .NET CLR 1.1.4322; .NET CLR " +
				      "3.5.30729; Release=ARP)\" \"UD-1\" - \"image/jpeg\" \"whatever\" 0.350 \"-\" - \"\" 265 923 934 \"\" " +
				      "62.24.11.25 images.com 1358492167 - Whatup",
				    "10.10.10.10 - \"FRED\" [18/Jan/2013:18:02:37 +1100] \"GET http://images.com/2013/Generic.jpg " +
				      "HTTP/1.1\" 304 306 \"http:/referall.com\" \"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; " +
				      "GTB7.4; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR " +
				      "3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 1.0.3705; .NET CLR 1.1.4322; .NET CLR  " +
				      "3.5.30729; Release=ARP)\" \"UD-1\" - \"image/jpeg\" \"whatever\" 0.352 \"-\" - \"\" 256 977 988 \"\" " +
				      "0 73.23.2.15 images.com 1358492557 - Whatup"
			);
	
	//正则表达式
	public static final Pattern apacheLogRegex = Pattern.compile(
			"^([\\d.]+) (\\S+) (\\S+) \\[([\\w\\d:/]+\\s[+\\-]\\d{4})\\] \"(.+?)\" (\\d{3}) ([\\d\\-]+) \"([^\"]+)\" \"([^\"]+)\".*"
			);
	
	/** Tracks the total query count and number of aggregate bytes for a particular group. */
	public static class Stats implements Serializable{
		private int count; 
		private int numBytes;
		public Stats(int count, int numBytes) {
		      this.count = count;
		      this.numBytes = numBytes;
		    }
		public Stats merge(Stats other)
		{
			return new Stats(count + other.count, numBytes + other.numBytes);
		}
		
		public String toString(){
			return String.format("bytes=%s\tn=%s", numBytes, count);
		}
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
